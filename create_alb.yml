AWSTemplateFormatVersion: 2010-09-09
Description: This template sets up an external ALB.
Parameters:
  Env:
    Description: Name of the Environment.
    Type: String
    Default: ''
  GreenEndPoint:
    Description: Green Endpoint of application
    Type: String
    Default: ''
  ABCDExportSGid:
    Description: Name of the exported security group id
    Type: 'List<AWS::EC2::SecurityGroup::Id>'
  Service:
    Description: Name of the Service.
    Type: String
    Default: ''
  VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: The VPC ID to set up ALB in.
  Scheme:
    Description: Scheme Type
    Type: String
    Default: internal
  CertificateARN:
    Description: Certificate ARN for application
    Type: String
  HealthCheckPath:
    Description: Health Check Path
    Type: String
Resources:
  ExternalALB:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Scheme: !Ref Scheme
      Type: application
      Name: !Join
        - ''
        - - !Ref Service
          - '-'
          - !Ref Env
      SecurityGroups: !Ref ABCDExportSGid
      Subnets: !Split
        - ','
        - !ImportValue
          'Fn::Sub': '${VpcId}:ingress-subnet:ids'
      LoadBalancerAttributes:
        - Key: routing.http2.enabled
          Value: 'false'
  TargetGroupBlue:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: '15'
      HealthCheckPath: !Ref HealthCheckPath
      HealthCheckPort: '443'
      HealthCheckProtocol: HTTPS
      HealthCheckTimeoutSeconds: '5'
      HealthyThresholdCount: '5'
      Name: !Join
        - ''
        - - !Ref Service
          - '-'
          - !Ref Env
          - '-blue'
      Port: '443'
      Protocol: HTTPS
      UnhealthyThresholdCount: '2'
      VpcId: !Ref VpcId
    DependsOn: ExternalALB
  TargetGroupGreen:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: '15'
      HealthCheckPath: !Ref HealthCheckPath
      HealthCheckPort: '443'
      HealthCheckProtocol: HTTPS
      HealthCheckTimeoutSeconds: '5'
      HealthyThresholdCount: '5'
      Name: !Join
        - ''
        - - !Ref Service
          - '-'
          - !Ref Env
          - '-green'
      Port: '443'
      Protocol: HTTPS
      UnhealthyThresholdCount: '2'
      VpcId: !Ref VpcId
    DependsOn: ExternalALB
  ALBListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      Certificates:
        - CertificateArn: !Ref CertificateARN
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref ExternalALB
      Port: '443'
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-TLS-1-2-Ext-2018-06
    DependsOn:
      - ExternalALB
      - TargetGroupBlue
  ALBListenerRule1:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'
    Properties:
      Actions:
        - TargetGroupArn: !Ref TargetGroupGreen
          Type: forward
      Conditions:
        - Field: host-header
          Values:
            - !Ref GreenEndPoint
      ListenerArn: !Ref ALBListener
      Priority: '1'
